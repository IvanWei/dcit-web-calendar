name: Update HTML content
on:
  schedule:
    - cron: '0 0/1 * * *'
  workflow_dispatch:

jobs:
  contents:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup ssh-agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{secrets.SSH_PRIVATE_KEY}}
      - name: Setup User Information
        run: |
          git config --global user.email "ivanwei_slack@outlook.com"
          git config --global user.name "WorldEarthBot"
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Node.js packages
        run: pnpm install --frozen-lockfile --prod
      - name: Create html page
        run: npm run build
        env:
          NEXT_PUBLIC_GTM_ID: GTM-TVJ8423
      - uses: actions/cache@v3
        # NOTE: https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#github-actions
        name: Setup nextjs cache
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Git clone gh-pages
        run: git clone git@github.com:IvanWei/dcit-web-calendar.git -b gh-pages
      - name: Deployment
        run: |
          rm -rf dcit-web-calendar/**/*
          cp -r out/* dcit-web-calendar/
          cd dcit-web-calendar
          touch .nojekyll
          echo "${{secrets.DOMAIN_NAME}}" > CNAME
          git add .
          git commit -m 'Deploy content to gh-pages'
          git push
